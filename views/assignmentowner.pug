doctype html
html
    head
        title Assignment - #{assignment.name}
        link(rel='stylesheet', href=baseUrl + '/stylesheets/style.css')
    body
        include header.pug
        .container
            h1 Assignment: #{assignment.name}
            p
                | <strong>Created by:</strong> #{assignment.creator.username}
            if assignment.deadline
                p
                    | <strong>Submission Deadline:</strong> #{assignment.deadline.toLocaleString()}
                if deadlinePassed
                    p
                        | <strong>Time to Deadline:</strong>
                        span(style="color:red")
                            |  Submission Deadline Passed (#{toDeadline})
                else
                    p
                        | <strong>Time to Deadline:</strong> #{toDeadline} (current time: #{new Date().toLocaleString()})
            else
                p
                    | <strong>Submission Deadline:</strong> None  
            //p
            //    | <strong>Expected Zip Name:</strong> #{assignment.expectedZipName}
            br
            .form-section
                h2 Create a Submission
                form(action=baseUrl + "" method="post" enctype="multipart/form-data")
                    label(for="zipFile") Upload your zip file:
                    input(type="file" name="zipFile" id="zipFile" accept=".zip" required)
                    button(type="submit") Submit

            .form-section
                h2 Update Assignment
                form(action=baseUrl + "/users/" + assignment.creator.username + "/assignments/" + assignment.name + "/update" method="POST" enctype="multipart/form-data")
                    label(for="name") Assignment Name (cannot be changed):
                    input(type="text" id="name" name="name" value="" + assignment.name readonly)
                    
                    label(for="maxGrade") Max Grade:
                    input(type="text" id="maxGrade" name="maxGrade" value="" + assignment.maxGrade)

                    //label(for="expectedZipName") Expected Zip Name:
                    //input(type="text" id="expectedZipName" name="expectedZipName" value="" + assignment.expectedZipName)
                    
                    label(for="deadline") Submission Deadline (submissions stopped after this time, leave blank for none):
                    input(type="datetime-local" id="deadline" name="deadline" value="" + deadline)
                    br
                    br
                    label(for="resourcesZip") Resources Zip File (leave empty to keep current): 
                        a(href=baseUrl + "/users/" + assignment.creator.username + "/assignments/" + assignment.name + "/resources")
                            | Download Current Resources
                    input(type="file" id="resourcesZip" name="resourcesZip" accept=".zip")
                        
                    label(for="command") Command to Execute Grading:
                    input(type="text" id="command" name="command" value="" + assignment.command)

                    label(for="imageName") Image Name:
                    input(type="text" id="imageName" name="imageName" value="" + assignment.imageName)

                    label(for="timeout") Timeout (seconds):
                    input(type="text" id="timeout" name="timeout" value="" + assignment.timeout)

                    label(for="maxZipSize") Max Zip Size (MB, currently #{assignment.maxSize / (1024 * 1024)}MB):
                    input(type="text" id="maxZipSize" name="maxZipSize")

                    label(for="extraSubmissionsPenaltyUnit") Extra Submissions Penalty (percentage deducted for each extra submission):
                    select(name="extraSubmissionsPenaltyUnit", id="extraSubmissionsPenaltyUnit")
                        option(value="none", selected=assignment.extraSubmissionsPenaltyUnit=="none") none
                        option(value="percent", selected=assignment.extraSubmissionsPenaltyUnit=="percent") percent
                        option(value="points", selected=assignment.extraSubmissionsPenaltyUnit=="points") points
                    label(for="extraSubmissionsPenalty") Extra Submissions Penalty Value:
                    input(type="text" id="extraSubmissionsPenalty" name="extraSubmissionsPenalty" value="" + assignment.extraSubmissionsPenalty required)                    
                    label(for="freeSubmissions") Free Submissions (number of submissions without penalty, 0 for unlimited):
                    input(type="text" id="freeSubmissions" name="freeSubmissions" value="" + assignment.freeSubmissions required)
                    div(id="penaltyWarning", style="color: red; display: none;")
                    br
                    button(type="submit") Submit Changes
            
            .form-section
                h2 Export Grades
                form(action=baseUrl + "/users/" + assignment.creator.username + "/assignments/" + assignment.name + "/grades" method="POST" enctype="multipart/form-data")
                    label(for="grademode") Grade Mode:
                    select(name="grademode", id="grademode")
                        option(value="highest") Highest Grade
                        option(value="recent" selected) Most Recent Grade

                    label(for="cutoff") Deadline (submitted at this time or before):
                    input(type="datetime-local" id="cutoff" name="cutoff" value="" + deadline)
                    br
                    br
                    label(for="includeData") Data to Include:
                    select(name="includeData", id="includeData")
                        option(value="csv" selected) Grades CSV File Only
                        option(value="feedback") Grades CSV File + Feedback Files
                        option(value="all") Grades CSV File + Feedback Files + Submission Zips
                    button(type="submit") Export Grades
            
            h2 Recent Submissions
            if subs && subs.length
                each submission in subs
                    div
                        | <strong>Submitted by:</strong> #{submission.studentName}
                        br
                        if submission.status === 'completed'
                            span(style="color: green;")
                                | Status: #{submission.status}
                            br
                            | Completed At: #{submission.finishedAt}
                        else if submission.status === 'failed'
                            span(style="color: red;")
                                | Status: #{submission.status}
                            br
                            | Completed At: #{submission.finishedAt}
                        else if submission.status == "cancelled"
                            span(style="color: gray;")
                                | Status: #{submission.status}
                            br
                            | Cancelled At: #{submission.finishedAt}
                        else
                            span(style="color: orange;")
                                | Status: #{submission.status}
                            br
                            | Submitted At: #{submission.createdAt}
                        br
                        | <strong>Submitted At:</strong> #{submission.createdAt}
                        br
                        a(href=baseUrl + "/executions/" + submission.id) View Details
                        br
                        br
            else
                p No submissions yet for this assignment.
            br
            .form-section
                h2 Archive and Delete Assignment
                form(action=baseUrl + "/users/" + assignment.creator.username + "/assignments/" + assignment.name + "/archive" method="POST")
                    p Archiving will create and download a zip containing all submissions, feedback, and resources.
                    button(type="submit") Archive Assignment
                form(action=baseUrl + "/users/" + assignment.creator.username + "/assignments/" + assignment.name + "/delete" method="POST")
                    p(style="color: red;")
                        |  Warning: Deleting an assignment will remove all submissions, feedback, and resources associated
                    p(style="color: red;")
                        |  It is suggested to archive the assignment first and check the archive before deleting.
                    p(style="color: red;")
                        |  This action cannot be undone.
                    
                    label(for="confirmDelete") I confirm that I want to delete this assignment and all associated
                        input(type="checkbox" id="confirmDelete" name="confirmDelete" required)
                        
                    button(type="submit") Delete Assignment
    script(src="/javascripts/assignmentcreation.js")
    